@using MVCRouteSystem.Services
@model MVCRouteSystem.Models.Team

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Team</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>

			<div class="form-group">
				@Html.LabelFor(model => model.Name)
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name,"",new {@class="text-danger"})
			</div>
			<div class="form-group">
				@foreach (Person person in await ServicesApi.GetPeopleNoTeam())
				{
					<div class="checkbox">
						<input type="checkbox" id="person" name="person" value="@person.Id">
						<label> @person.Name</label><br>
					</div>
				}
				<div class="form-group">
					</><label asp-for="City" class="control-label"></label><br />
					<select asp-for="City" id="City">
						@{
							foreach (var city in await ServicesApi.GetCities())
							{
								<option value="@city.Name"> @city.Name - @city.State </option>
							}
						}
					</select>
					<span asp-validation-for="City" class="text-danger"></span>
				</div>
			</div>
			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");

	}
}